<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on shishuoCh&#39;s Blog</title>
    <link>https://shishuochen.github.io/posts/</link>
    <description>Recent content in Posts on shishuoCh&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 08 Sep 2023 11:37:01 +0800</lastBuildDate><atom:link href="https://shishuochen.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>题单收藏夹</title>
      <link>https://shishuochen.github.io/2023/vv6sqn_gt/</link>
      <pubDate>Fri, 08 Sep 2023 11:37:01 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/vv6sqn_gt/</guid>
      <description>✍ 写在前面 题单收藏自各个大佬，仅用作学习，侵删；所有参考的都有出处。 🎗 二分题单 二分答案系列 $\cdots$ end $\cdots$</description>
    </item>
    
    <item>
      <title>LC-2771. 构造最长非递减子数组（记忆化dfs的自我解惑）</title>
      <link>https://shishuochen.github.io/2023/a51ag9mj/</link>
      <pubDate>Mon, 10 Jul 2023 21:30:55 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/a51ag9mj/</guid>
      <description>写在前面 感觉这道题很适合记录一下，打破了我对 $dfs$ 的思维范式~ 2771. 构造最长非递减子数组 想不通的点 递归的传参怎样设置？ 递归的 $base$ $case$ 怎么写？ 如何进入下一</description>
    </item>
    
    <item>
      <title>LFU（Least Frequency Used）算法数据结构总结</title>
      <link>https://shishuochen.github.io/2023/q41afejy9/</link>
      <pubDate>Sat, 24 Jun 2023 22:21:54 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/q41afejy9/</guid>
      <description>写在前面 LFU（Least Frequency Used）算法也是一种缓存淘汰策略，顾名思义就是淘汰掉使用频次最少的数据，如果多个最低频次使用的就删除最久远的呢</description>
    </item>
    
    <item>
      <title>LRU（Least Recently Used）算法</title>
      <link>https://shishuochen.github.io/2023/qnwpygokg/</link>
      <pubDate>Sat, 24 Jun 2023 15:47:57 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/qnwpygokg/</guid>
      <description>写在前面 LRU (Least Recently Used) 算法就是一种缓存淘汰策略, 见名知意就是删除掉最久未使用的内存。题目要求get和put在$O(1)$时间内完成，哈希表可以做到</description>
    </item>
    
    <item>
      <title>Dijkstra 算法：最小路径或者最大路径</title>
      <link>https://shishuochen.github.io/2023/klkfgguu9/</link>
      <pubDate>Thu, 22 Jun 2023 20:24:56 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/klkfgguu9/</guid>
      <description>写在前面 Dijkstra 算法实质上就是 BFS 算法的加强版，算法的模拟过程就是BFS，只不过 Dijkstra 算法一般来说是有固定的起止位置的，然后计算这两点之间的最大或者最小</description>
    </item>
    
    <item>
      <title>最小生成树：Kruskal &amp; Prim 算法</title>
      <link>https://shishuochen.github.io/2023/sgdkfm6rd/</link>
      <pubDate>Thu, 22 Jun 2023 20:24:33 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/sgdkfm6rd/</guid>
      <description>写在前面 总结摘抄自labuladong 「树」和「图」的根本区别：树不会包含环，图可以包含环。一幅图可以有很多不同的生成树, 在所有可能的生成树</description>
    </item>
    
    <item>
      <title>并查集(Union-Find)算法及使用</title>
      <link>https://shishuochen.github.io/2023/eujqvjda2/</link>
      <pubDate>Thu, 22 Jun 2023 20:24:12 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/eujqvjda2/</guid>
      <description>写在前面 并查集（Union-Find）算法是一个专门针对「动态连通性」的算法。连通指的是一种等价关系：自反性、对称性、传递性。并查集算法提供</description>
    </item>
    
    <item>
      <title>二分图遍历染色</title>
      <link>https://shishuochen.github.io/2023/bi_kocjis/</link>
      <pubDate>Thu, 22 Jun 2023 20:12:07 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/bi_kocjis/</guid>
      <description>写在前面 从简单实用的角度来看，二分图结构在某些场景可以更高效地存储数据。不同于哈希表的一对一的映射；二分图可以做到一到多的映射，想象二分图中</description>
    </item>
    
    <item>
      <title>图的基本遍历、有向环检测、拓扑排序</title>
      <link>https://shishuochen.github.io/2023/z3ekdp0wl/</link>
      <pubDate>Mon, 19 Jun 2023 21:07:47 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/z3ekdp0wl/</guid>
      <description>写在前面 主要分为两种思路：利用visited数组与onpath数组的DFS遍历（逆后序排列）、利用队列的BFS遍历（需要用到节点的入度信息）</description>
    </item>
    
    <item>
      <title>扁平化嵌套列表迭代器</title>
      <link>https://shishuochen.github.io/2023/tw24pswjo/</link>
      <pubDate>Sat, 17 Jun 2023 22:53:15 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/tw24pswjo/</guid>
      <description>写在前面 看完题解，这道题其实应该不难，可能是因为看了题解所以不觉得难，哈哈哈；感觉主要是理解题意，特别要注意注释中的内部函数。 其实就相当于给</description>
    </item>
    
    <item>
      <title>快速排序详情及其应用</title>
      <link>https://shishuochen.github.io/2023/b5xhddsnk/</link>
      <pubDate>Sat, 17 Jun 2023 22:52:08 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/b5xhddsnk/</guid>
      <description>写在前面 对于一个无序数组，求第 $K$ 个最大元素，最容易想到的就是排序，然后选择相应位置的元素；其中有些排序算法是可以提前终止的，比如快速排序、冒</description>
    </item>
    
    <item>
      <title>二叉搜索树的构建</title>
      <link>https://shishuochen.github.io/2023/ik6kuzdd9/</link>
      <pubDate>Thu, 15 Jun 2023 20:21:47 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/ik6kuzdd9/</guid>
      <description>写在前面 二叉搜索树的题一定要利用二叉搜索树的特性：中序遍历特性、任意节点左子树都小于根节点，右子树大于根节点。 主要分为三个部分： 从最基本搜索</description>
    </item>
    
    <item>
      <title>归并排序及其应用</title>
      <link>https://shishuochen.github.io/2023/gh9fzukz5/</link>
      <pubDate>Tue, 13 Jun 2023 14:47:47 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/gh9fzukz5/</guid>
      <description>写在前面 看完labuladong的归并排序的应用后，准备稍稍总结下；来到题解区，翻了下三叶姐的题解（恐怖如斯，惊掉下巴~~） 原始数组：$nu</description>
    </item>
    
    <item>
      <title>二叉树的遍历：Morris遍历</title>
      <link>https://shishuochen.github.io/2023/okff76tzg/</link>
      <pubDate>Tue, 06 Jun 2023 18:15:28 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/okff76tzg/</guid>
      <description>写在前面 这种题回过头来再做一下，别有一番风味。之前没看过题解中的 Morris 遍历方法，只是简单的AC然后下一题，可能也不是很明所以然，借此记录一下 Morris 遍</description>
    </item>
    
    <item>
      <title>二分查找框架: x、f(x)、target</title>
      <link>https://shishuochen.github.io/2023/ff7ripv_q/</link>
      <pubDate>Tue, 30 May 2023 11:05:17 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/ff7ripv_q/</guid>
      <description>抽象出 $x、f(x)、target$ 框架 此题思路同 1011. 在 D 天内送达包裹的能力 - 力扣（LeetCode） 以及 875. 爱吃香蕉的珂珂 - 力扣（LeetCo</description>
    </item>
    
    <item>
      <title>528. 按权重随机选择</title>
      <link>https://shishuochen.github.io/2023/arinpegej/</link>
      <pubDate>Sun, 28 May 2023 22:42:17 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/arinpegej/</guid>
      <description>最朴素的想法 一开始，不会做，就想到了最简单的方法，那就是根据权重数组 $w$ 的索引值依次构建 $w[i]$ 个 $i$ 值，放入数组nums中，然后利用随机数生成一个值</description>
    </item>
    
    <item>
      <title>字符串匹配-KMP算法</title>
      <link>https://shishuochen.github.io/2023/k-flhnrms/</link>
      <pubDate>Sat, 27 May 2023 15:23:45 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/k-flhnrms/</guid>
      <description>KMP算法接触是从滑动窗口的使用开始的，因为涉及到模式（字符串）匹配，自己也是理解了好久才差不多弄懂，写在了LeetCode题解里，直接复制</description>
    </item>
    
    <item>
      <title>SPM相关问题合集</title>
      <link>https://shishuochen.github.io/2023/ebxcy0680/</link>
      <pubDate>Tue, 09 May 2023 14:36:22 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/ebxcy0680/</guid>
      <description>汇总下SPM中常见的问题及科研需求，其实一般来说，SPM12 Manual中应该都可以解决问题，但是它实在太繁杂了。持续更新但不勤快~ SPM中</description>
    </item>
    
    <item>
      <title>科研脚本常用的Shell知识汇总</title>
      <link>https://shishuochen.github.io/2023/bry1o8uw6/</link>
      <pubDate>Tue, 09 May 2023 14:19:25 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/bry1o8uw6/</guid>
      <description>记在本地还是不方便，搬上来吧~ 命令类 Linux命令结果输出到变量 var=$(com)、var=`com` 抑制命令界面输出 : $(command line) 注意：冒号后面</description>
    </item>
    
    <item>
      <title>ChatGPT高效使用Promot合集</title>
      <link>https://shishuochen.github.io/2023/eybhawgtk/</link>
      <pubDate>Sat, 29 Apr 2023 16:27:32 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/eybhawgtk/</guid>
      <description>以下都是从互联网上获取结果，都附有原始链接了解更多。 一步一步来 把 Let&amp;rsquo;s think step by step放在提问后面，可以优化ChatGPT的回答，很多时候，它不能</description>
    </item>
    
    <item>
      <title>AFNI给FMRI的sub-brick添加命名</title>
      <link>https://shishuochen.github.io/2023/ujcg5-_kj/</link>
      <pubDate>Tue, 11 Apr 2023 16:34:05 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/ujcg5-_kj/</guid>
      <description>问题需求 对于一个fMRI文件，众所周知它是一个包含许多个Volumes的4D文件，一般的fMRI可能是保存的时间序列。 但也有一些是用户自己写</description>
    </item>
    
    <item>
      <title>Font Awesome常用图标（Free版）</title>
      <link>https://shishuochen.github.io/2023/nto8nftqj/</link>
      <pubDate>Sat, 18 Feb 2023 14:50:03 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/nto8nftqj/</guid>
      <description>&amp;lt;span style=&amp;quot;color: Tomato;&amp;quot;&amp;gt; &amp;lt;i class=&amp;quot;fas fa-exclamation-triangle&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/span&amp;gt; $\cdots$ end $\cdots$</description>
    </item>
    
    <item>
      <title>FSL的离线安装方法</title>
      <link>https://shishuochen.github.io/2023/gv-z65lmb/</link>
      <pubDate>Sat, 07 Jan 2023 15:06:56 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2023/gv-z65lmb/</guid>
      <description>记录一下FSL（FMRIB Software Library）离线安装方法，也算是2023年的第一篇； 这篇文章主要参考的是CSDN上的一篇文章。 前言 关于FSL</description>
    </item>
    
    <item>
      <title> 我的电脑</title>
      <link>https://shishuochen.github.io/2022/s_hmj_rr/</link>
      <pubDate>Fri, 09 Dec 2022 13:56:37 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2022/s_hmj_rr/</guid>
      <description>IDM ：https://xbzxs.lanzouw.com/b05rvo66f 解压密码：520、小白课代表 Hugo 博客必备 任务栏模糊：Transluc</description>
    </item>
    
    <item>
      <title>AFNI/FSLの日常使用命令</title>
      <link>https://shishuochen.github.io/2022/7oppy6sjq/</link>
      <pubDate>Mon, 07 Nov 2022 14:19:10 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2022/7oppy6sjq/</guid>
      <description>想来整理下常用的AFNI和FSL软件的命令，从而满足一些常用的MRI图像处理操作 AFNI类 常用命令简介表 目的 命令 参数项 更多 制作Mask文件 3dAutomask</description>
    </item>
    
    <item>
      <title>找不到尝试执行工作进程的 parfor 循环的源代码（MATLAB）</title>
      <link>https://shishuochen.github.io/2022/3ogq2zfjp/</link>
      <pubDate>Wed, 26 Oct 2022 21:15:32 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2022/3ogq2zfjp/</guid>
      <description>在一次跑代码的过程中，遇到了（找不到尝试执行工作进程的 parfor 循环的源代码）的错误信息。在此之前，代码是可以正常运行的，我只是改了parfor循环</description>
    </item>
    
    <item>
      <title>MATLAB子图添加统一标题和Xlabel，Ylabel</title>
      <link>https://shishuochen.github.io/2022/nideormrv/</link>
      <pubDate>Thu, 20 Oct 2022 12:06:56 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2022/nideormrv/</guid>
      <description>平常我们都用subplot函数来画多个子图，并且给每个子图添加标题。但是如果想给所有的子图一个总的标题和横纵标题怎么办？我找了一圈没找到，虽</description>
    </item>
    
    <item>
      <title>Hugo BLOG常用代码合集</title>
      <link>https://shishuochen.github.io/2022/ogpurjwl4/</link>
      <pubDate>Wed, 28 Sep 2022 12:08:20 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2022/ogpurjwl4/</guid>
      <description>每次写文章及本地预览效果时，有一些不常用的命令容易忘记，还要去过往的代码里找，很是麻烦。所以特别的记录整合到一起&amp;hellip;.. 插入图片</description>
    </item>
    
    <item>
      <title>Hugo博客自定义优化 III</title>
      <link>https://shishuochen.github.io/2022/cpvuqozuc/</link>
      <pubDate>Tue, 27 Sep 2022 18:24:41 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2022/cpvuqozuc/</guid>
      <description>上一次修改博客主题还是在上一次，这次也是2022开年这么久以来第一篇BLOG，再次写下最近最博客主题的改进. 加上上一篇优化文章内容已经足够长</description>
    </item>
    
    <item>
      <title>ANTs/AFNI配准fMRI到标准空间</title>
      <link>https://shishuochen.github.io/2022/a5ooapv0n/</link>
      <pubDate>Tue, 27 Sep 2022 10:29:50 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2022/a5ooapv0n/</guid>
      <description>1. 配准思路 fMRI分析的几个方面需要以某种方式进行图像的空间变换，例如个体内部的图像匹配（头动校正、功能到个体）或者个体间的图像配准（用于完</description>
    </item>
    
    <item>
      <title>Hugo博客自定义优化 II</title>
      <link>https://shishuochen.github.io/2022/fayxu7qqt/</link>
      <pubDate>Sun, 25 Sep 2022 20:57:22 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2022/fayxu7qqt/</guid>
      <description>第一篇主题优化文章内容条例太长了，拆成两部分 1. 博客更换为valine评论 将路文件\themes\mogege\layouts\partial</description>
    </item>
    
    <item>
      <title>DSI Studio分析数据Manual</title>
      <link>https://shishuochen.github.io/2021/8wucs4her/</link>
      <pubDate>Sat, 27 Nov 2021 10:47:56 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2021/8wucs4her/</guid>
      <description>原文网址 1. 简介 以下列表是 DSI Studio 支持的图像格式。 DICOM格式，包括SIEMENS TIM、SIEMENS Trio、GE SIGNA HDx、Philips 4D</description>
    </item>
    
    <item>
      <title>神经生物学</title>
      <link>https://shishuochen.github.io/2021/kaaysw4my/</link>
      <pubDate>Tue, 28 Sep 2021 09:14:57 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2021/kaaysw4my/</guid>
      <description>第一部分 主要内容 .tg {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;} .tg td{background-color:#fdf6e3;border-color:#93a1a1;border-style:solid;border-width:1px;color:#002b36; font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;} .tg th{background-color:#657b83;border-color:#93a1a1;border-style:solid;border-width:1px;color:#fdf6e3; font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;} .tg .tg-9wq8{border-color:inherit;text-align:center;vertical-align:middle} 概述 信号处理 感觉系统 本能行为 运动系统 学习记忆 神经系统疾病 神经科学发展史 神经元的电学特征 视觉 节律 运</description>
    </item>
    
    <item>
      <title>Termux提交代码到GitHub</title>
      <link>https://shishuochen.github.io/2021/b8ejeacp/</link>
      <pubDate>Tue, 14 Sep 2021 03:30:22 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2021/b8ejeacp/</guid>
      <description>1. Termux的使用 Termux是什么 Termux 是一个Android 终端模拟器和 Linux 环境应用程序，无需 root 或设置即可直接运行，可以使用APT包管理器可以</description>
    </item>
    
    <item>
      <title>MRI数据分析常用软件合集</title>
      <link>https://shishuochen.github.io/2021/5hy3l2plc/</link>
      <pubDate>Fri, 12 Mar 2021 07:30:44 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2021/5hy3l2plc/</guid>
      <description>1. MATALB工具箱 SPM（Statistical Parametric Mapping） 官网地址 手册文档 使用方法 将下载文件解压并复制到MATLAB的toolbo</description>
    </item>
    
    <item>
      <title>DTI数据处理流程概述(FA、TBSS)</title>
      <link>https://shishuochen.github.io/2021/i-v08kuvx/</link>
      <pubDate>Tue, 09 Mar 2021 11:49:57 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2021/i-v08kuvx/</guid>
      <description>扩散加权磁共振成像（DWI或DW-MRI）是使用特定的MRI序列以及从所得数据生成图像的软件，该软件使用水分子的扩散在MR图像中产生对比度。</description>
    </item>
    
    <item>
      <title>双系统Ubuntu分区扩容</title>
      <link>https://shishuochen.github.io/2021/essp_skj2/</link>
      <pubDate>Fri, 26 Feb 2021 03:16:42 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2021/essp_skj2/</guid>
      <description>新年第一记，空间不足是常有的事，特在此记录下以备下次之需。本文最大缺点就是未能图文并茂，称不上一篇好的教程，可能不如图片来的直接，可以结合网</description>
    </item>
    
    <item>
      <title>Tikz绘图学习笔记</title>
      <link>https://shishuochen.github.io/2020/0p0vfub3s/</link>
      <pubDate>Sat, 05 Dec 2020 21:28:59 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/0p0vfub3s/</guid>
      <description>1. 指定坐标的用法 指定坐标的一般句法是$\color{red}\verb|([&amp;lt;options&amp;gt;]&amp;lt;coordinate sp</description>
    </item>
    
    <item>
      <title>Linux Shell知识点合集4</title>
      <link>https://shishuochen.github.io/2020/tmmwklxfx/</link>
      <pubDate>Sun, 08 Nov 2020 22:19:12 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/tmmwklxfx/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Linux Shell知识点合集3</title>
      <link>https://shishuochen.github.io/2020/klhx60zjd/</link>
      <pubDate>Fri, 06 Nov 2020 19:36:08 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/klhx60zjd/</guid>
      <description>本篇文章接『Linux Shell知识点合集2』，主要包含安装软件程序、编辑器使用等。 6.安装软件程序 本小节介绍Linux上能见到的各种包管理</description>
    </item>
    
    <item>
      <title>Linux Shell知识点合集2</title>
      <link>https://shishuochen.github.io/2020/ifxovueyg/</link>
      <pubDate>Wed, 04 Nov 2020 20:53:50 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/ifxovueyg/</guid>
      <description>本篇文章接『Linux Shell知识点合集1』，主要包含Linux文件权限、管理文件系统、安装软件程序、编辑器使用等。 4. 理解Linux文件权</description>
    </item>
    
    <item>
      <title>Linux Shell知识点合集1</title>
      <link>https://shishuochen.github.io/2020/i1tn7md8r/</link>
      <pubDate>Tue, 03 Nov 2020 19:20:27 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/i1tn7md8r/</guid>
      <description>一个多月都没有记录东西了，最近的生活着实是有点废！不过好在系统的看了一本书《Linux命令行与shell脚本编程大全（第3版）》，负罪感少了</description>
    </item>
    
    <item>
      <title>用来了解Linux“命令”的命令</title>
      <link>https://shishuochen.github.io/2020/nlj2i4e77/</link>
      <pubDate>Thu, 17 Sep 2020 20:44:00 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/nlj2i4e77/</guid>
      <description>命令千千万，遇到不熟悉的命令怎么办？Google search？其实可以本地help的！当然还有很多的操作…… 1. Command Lists Command Meaning type Indicate how a command name is interpreted which Display which</description>
    </item>
    
    <item>
      <title>操纵文件和目录（Linux）</title>
      <link>https://shishuochen.github.io/2020/ihretxvwf/</link>
      <pubDate>Thu, 03 Sep 2020 21:28:58 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/ihretxvwf/</guid>
      <description>1. 前言 本文主要介绍以下几个常用的操纵文件和目录（本质上是对文件或目录命名的处理）的命令（同样是见名知意）： Command Meaning cp Copy files and directories mv Move/rename files and directories mkdir Create directories rm Remove</description>
    </item>
    
    <item>
      <title>遍历目录及Linux文件系统</title>
      <link>https://shishuochen.github.io/2020/2xawn806p/</link>
      <pubDate>Sun, 30 Aug 2020 20:43:49 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/2xawn806p/</guid>
      <description>1. 前言 本文主要讲述遍历目录用到的一些shell命令和Linux文件系统，以及其他小的知识点。主要命令（大多数都是见名知意的）列举如下： Command Meaning pwd</description>
    </item>
    
    <item>
      <title>什么是Shell</title>
      <link>https://shishuochen.github.io/2020/nlrmsp86u/</link>
      <pubDate>Fri, 28 Aug 2020 23:35:41 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/nlrmsp86u/</guid>
      <description>1. 什么是shell &amp;emsp;&amp;emsp;当我们说“命令行”（command line）的时候，其实我们指的是shell。shell本质是一个</description>
    </item>
    
    <item>
      <title>矩阵分解求解线性方程组</title>
      <link>https://shishuochen.github.io/2020/n0hnjzpmm/</link>
      <pubDate>Wed, 26 Aug 2020 11:17:55 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/n0hnjzpmm/</guid>
      <description>题设 &amp;emsp;&amp;emsp;设有如下方程组： $$ \begin{bmatrix} a_{11}&amp;a_{12}&amp;\cdots&amp;a_{1n}\\ a_{21}&amp;a_{22}&amp;\cdots&amp;a_{2n}\\ \vdots&amp;\vdots&amp;\ddots&amp;\vdots\\ a_{21}&amp;a_{22}&amp;\cdots&amp;a_{2n} \end{bmatrix}\begin{bmatrix} x_1\\ x_2\\ \vdots\\ x_n \end{bmatrix}=\begin{bmatrix} b_1\\ b_2\\ \vdots\\ b_n \end{bmatrix} $$ $$ \bm\Darr $$ $$ Ax=b $$ 求解思路 &amp;emsp;&amp;emsp;设$n$阶方阵$</description>
    </item>
    
    <item>
      <title>FT、DFS、DTFT、DFT</title>
      <link>https://shishuochen.github.io/2020/wfh7aitk2/</link>
      <pubDate>Tue, 25 Aug 2020 11:17:31 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/wfh7aitk2/</guid>
      <description>期末考试结束啦！终于可以有个小空写点东西了，近来复习了随机信号分析和信号系统，对一些东西有了更加深刻的认识，所以本文是自己对于如标题所列的变</description>
    </item>
    
    <item>
      <title>Chapter7: 点积与叉积</title>
      <link>https://shishuochen.github.io/2020/5azumu-8l/</link>
      <pubDate>Thu, 06 Aug 2020 15:29:06 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/5azumu-8l/</guid>
      <description>I. 前言 点积（Dot Product）又称数量积或标量积（Scalar Product），这里说的是点积的结果是一个标量；叉积（Cross prod</description>
    </item>
    
    <item>
      <title>傅里叶变换相关图谱</title>
      <link>https://shishuochen.github.io/2020/epbncpk4s/</link>
      <pubDate>Tue, 04 Aug 2020 16:03:20 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/epbncpk4s/</guid>
      <description>话不多说一张图 相关文章推荐 FT、DFS、DTFT、DFT 傅里叶变换性质及变换对</description>
    </item>
    
    <item>
      <title>Chapter6:逆矩阵、列空间与零空间、秩</title>
      <link>https://shishuochen.github.io/2020/mwtb5_bys/</link>
      <pubDate>Sat, 01 Aug 2020 15:28:51 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/mwtb5_bys/</guid>
      <description>1. 逆矩阵 &amp;emsp;&amp;emsp;前面已经知道，矩阵代表着一种线性变换，是对空间的一种操纵，逆矩阵自然也不例外。矩阵$A^{-1}$对空间的操</description>
    </item>
    
    <item>
      <title>Chapter5:行列式</title>
      <link>https://shishuochen.github.io/2020/8ranpmyi1/</link>
      <pubDate>Thu, 30 Jul 2020 14:20:41 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/8ranpmyi1/</guid>
      <description>&amp;emsp;&amp;emsp;线性变换中有的将空间向外拉伸，有的则将空间向内挤压，所以变换究竟对空间有多少拉伸或挤压？如何测量和表示？ &amp;emsp;</description>
    </item>
    
    <item>
      <title>Chapter4:矩阵乘法</title>
      <link>https://shishuochen.github.io/2020/fvo1n-idv/</link>
      <pubDate>Tue, 28 Jul 2020 16:46:27 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/fvo1n-idv/</guid>
      <description>&amp;emsp;&amp;emsp;线性变换是对二维空间的变换，自然而然可以想到进行多个变换&amp;hellip;&amp;hellip; 1. 考虑进行两次线性变换 &amp;em</description>
    </item>
    
    <item>
      <title>Chapter3:矩阵与向量空间</title>
      <link>https://shishuochen.github.io/2020/diskudhd9/</link>
      <pubDate>Mon, 27 Jul 2020 21:14:05 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/diskudhd9/</guid>
      <description>&amp;emsp;&amp;emsp;牢记矩阵代表着一种线性变换 1. 矩阵与线性变换 为什么叫变换？ &amp;emsp;&amp;emsp;变换其实也就是常提起的函数的一种说法</description>
    </item>
    
    <item>
      <title>傅里叶变换的性质及常用变换对</title>
      <link>https://shishuochen.github.io/2020/b2mbvmz9k/</link>
      <pubDate>Sat, 25 Jul 2020 21:56:44 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/b2mbvmz9k/</guid>
      <description>&amp;emsp;&amp;emsp;近来的随机信号分析“预习”过程中，总要用到一些傅里叶变换对，记录在此方便查阅。 1. 傅里叶变换的性质 名称 时域 频域 定义 $f(t)=\frac{1}{2\pi}\int_{-\infty}^{+\infty}F(jw)e^{jwt}dw$ $F(jw)=\int_{-\infty}^{+\infty}f(t)e^{-jwt}dt$</description>
    </item>
    
    <item>
      <title>Hugo博客自定义优化 I</title>
      <link>https://shishuochen.github.io/2020/uffick8u1/</link>
      <pubDate>Thu, 23 Jul 2020 23:31:01 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/uffick8u1/</guid>
      <description>之前写博客一直是在Gridea平台，用的是@hao大佬的Next主题。后来接触了Mogege主题，感觉简洁好用，所以就又搭建了个博客并将文章</description>
    </item>
    
    <item>
      <title>Chapter I &amp; Chapter II</title>
      <link>https://shishuochen.github.io/2020/uj8lovhzh/</link>
      <pubDate>Thu, 23 Jul 2020 23:26:04 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/uj8lovhzh/</guid>
      <description>Chapter I和II作者主要介绍了一些基本的点： 向量是什么？ 线性组合、空间、基 1. 向量是什么？ 向量加法和向量乘法贯穿线性代数的始终。 把向量看做一种特定的</description>
    </item>
    
    <item>
      <title>线代学习笔记摘录</title>
      <link>https://shishuochen.github.io/2020/oktyklte8/</link>
      <pubDate>Fri, 17 Jul 2020 23:45:32 +0800</pubDate>
      
      <guid>https://shishuochen.github.io/2020/oktyklte8/</guid>
      <description>&amp;emsp;&amp;emsp;最近再次重温了@3Blue1Brown的“课程”：线性代数的本质&amp;mdash;&amp;mdash;系列合集（顺便说一下，这</description>
    </item>
    
    <item>
      <title>如何批量&#34;左右&#34;合并txt文件</title>
      <link>https://shishuochen.github.io/2020/r_e_e13ck/</link>
      <pubDate>Thu, 28 May 2020 22:32:24 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/r_e_e13ck/</guid>
      <description>&amp;emsp;&amp;emsp;合并txt文件有很多种方法，如果文件数目不多手动复制也不是不可，但是文件多的时候就显得有点力不从心了；有的时候不光如</description>
    </item>
    
    <item>
      <title>MATLAB中好用的命令和函数（持续更新）</title>
      <link>https://shishuochen.github.io/2020/cz15p-u8k/</link>
      <pubDate>Wed, 27 May 2020 21:32:22 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/cz15p-u8k/</guid>
      <description>&amp;emsp;&amp;emsp;本文主要记录自己在使用MATLAB过程中常用到的知识点（命令和函数），在此记录下来，也方便回顾查阅。 1. 技巧篇 clearvars -except var1 v</description>
    </item>
    
    <item>
      <title>基于形态学分析提取木塞个数及木塞直径</title>
      <link>https://shishuochen.github.io/2020/saplzmgqs/</link>
      <pubDate>Sun, 17 May 2020 15:44:24 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/saplzmgqs/</guid>
      <description>&amp;emsp;&amp;emsp;本文主要记录基于形态学分析提取图像中木塞个数及木塞的直径的解决方法。本方法同样适用于其他图像中圆物体的统计计数、标记</description>
    </item>
    
    <item>
      <title>同态滤波及MATLAB实现</title>
      <link>https://shishuochen.github.io/2020/fwee4iohn/</link>
      <pubDate>Thu, 23 Apr 2020 14:25:00 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/fwee4iohn/</guid>
      <description>&amp;emsp;&amp;emsp;同态滤波(Homomorphic filtering)是一种广泛用于信号和图像处理的技术，将原本的信号经由非线性映射，</description>
    </item>
    
    <item>
      <title>Gridea中Markdown写作小结~</title>
      <link>https://shishuochen.github.io/2020/k0eu-2smz/</link>
      <pubDate>Sat, 18 Apr 2020 14:23:57 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/k0eu-2smz/</guid>
      <description>&amp;emsp;&amp;emsp;本文主要是记录自己在Gridea写作时遇到的“问题”，有的时候想实现一种排版样式费尽九牛二虎之力才找到答案，特在此记</description>
    </item>
    
    <item>
      <title>图像增强算法及MATLAB实现</title>
      <link>https://shishuochen.github.io/2020/urnq4uiod/</link>
      <pubDate>Sat, 18 Apr 2020 14:22:07 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/urnq4uiod/</guid>
      <description>图像增强算法常见于对图像的亮度、对比度、饱和度、色调等进行调节，增加其清晰度，减少噪点等。由于受到环境，光线等的影响，拍摄的照片清晰度和对比</description>
    </item>
    
    <item>
      <title>图像插值算法及MATLAB实现</title>
      <link>https://shishuochen.github.io/2020/ejq1xavt/</link>
      <pubDate>Fri, 17 Apr 2020 14:20:01 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/ejq1xavt/</guid>
      <description>本文讲述的插值算法包括：最近邻插值、双线性插值及双立方插值。主要针对于二维空间（图像）的放大过程中的插值问题。 1 何为插值 &amp;emsp;&amp;ems</description>
    </item>
    
    <item>
      <title>栈实现简单计算器</title>
      <link>https://shishuochen.github.io/2020/3aynm0ijd/</link>
      <pubDate>Sat, 11 Apr 2020 11:19:21 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/3aynm0ijd/</guid>
      <description>&amp;emsp;&amp;emsp;本文主要写如何用栈结构来实现简单的计算器 ，主要包括四则运算，并且在此基础上添加括号、乘方等，示例如下： $$-3.63\times (36.9+26.2)^{5}-5.3*(-2)\div 3.6^{2}.$$ 下面说说</description>
    </item>
    
    <item>
      <title>error: invalid operands of types &#39;double&#39; and &#39;int&#39; to binary &#39;operator%&#39;</title>
      <link>https://shishuochen.github.io/2020/msdlyc-zj/</link>
      <pubDate>Mon, 30 Mar 2020 14:12:18 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/msdlyc-zj/</guid>
      <description>在一次C++的练习中，我发现了这个问题，并在网上查找到了原因，特在此记录下来。 1️⃣ 基本 从字面意思来看就是说，类型int和double为二进</description>
    </item>
    
    <item>
      <title>如何在ms-word中优雅的插入代码</title>
      <link>https://shishuochen.github.io/2020/evcfke7nv/</link>
      <pubDate>Sun, 01 Mar 2020 19:29:11 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/evcfke7nv/</guid>
      <description>在Microsoft Word 中插入代码，保留颜色和格式 1. 使用编辑器粘贴代码到Word Visual Studio Code 戳我进官网 直接粘贴到Word &amp;emsp;&amp;emsp;$\bullet$ 从Visual Studio Code直</description>
    </item>
    
    <item>
      <title>如何裁剪或生成eps格式图片</title>
      <link>https://shishuochen.github.io/2020/0xjn_wkk/</link>
      <pubDate>Wed, 19 Feb 2020 14:19:02 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/0xjn_wkk/</guid>
      <description>EPS(Encapsulated PostScript)是PostScript的一种延伸类型。EPS（Encapsulated PostScript）是目前系统中功能最强的一</description>
    </item>
    
    <item>
      <title>Compile Chinese documents with pdfLaTeX compiler</title>
      <link>https://shishuochen.github.io/2020/yen-2yhvj/</link>
      <pubDate>Fri, 07 Feb 2020 22:03:21 +0000</pubDate>
      
      <guid>https://shishuochen.github.io/2020/yen-2yhvj/</guid>
      <description>$\LaTeX$ supports many worldwide languages by means of some special packages. This article explains how to typeset Chinese documents with pdfLaTeX. CJKutf8 with pdfLaTeX The CJKutf8 package can also be used to generate a document with pdfLaTeX. Chinese (and Japanese/Korean) text must be places inside a CJK environment, so this is usually only convenient for documents in English with bits of Chinese text or vice-versa. Code example \documentclass{article} \usepackage{CJKutf8} \begin{document}</description>
    </item>
    
  </channel>
</rss>
